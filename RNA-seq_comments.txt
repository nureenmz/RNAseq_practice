#Load the required libraries & load the files for tutorial8
#The input files were generated using this code- 
#out and provided for information only
#alignment_files <- list.files(path = "./aligned_merged",pattern="*.bam",full.names=T)
#Generate a simple QC file to confirm the QC results
#cl <- makeCluster(15)
#qQCReport(alignment_files, 
#	pdfFilename="results/qc_report.pdf",clObj=cl,useSampleNames=T)
#stopCluster(cl)
#use featureCounts to load the BAM files
# this object has slots "$" to access
# mytable_features <- featureCounts(files=alignment_files,
# 	annot.ext="./omes/annot/Mus_musc ulus.GRCm38.99.gtf",
# 	isGTFAnnotationFile = TRUE, 
# 	countMultiMappingReads=F, 
# 	minMQS=30, 
# 	nthreads=10,
# 	minOverlap=10)
# Access count data and column names
# Shorten sample names eg"X.home.guest101.new_rnaseq.aligned.SRR5054353.sorted.bam" 
# Order the elements in the table 
# remove XO samples
# Create the required object for DESeq analysis
# The design for differential analysis is fed into this object
# The adf annotates each sample 
# check the object dimensions 
# check the object type
# DESeqDataSet class, type S4
# check what this object contains 
# Filter remove genes below threshold
# first filter by counts 
# second filter - require >10 in >= 3 samples 
# size factor estimation for normalisation
# these are used to scale by library size when data is exported. 
# DESeq2 methods for data normalization
# Normalized log coiunts
# fpm is similar to cpm and discussed here 
# https://rdrr.io/bioc/DESeq2/man/fpm.html
# Here the data is log transformed
# Also normalize by the sizeFactors
# rlog and vsd are discussed here 
# https://genomebiology.biomedcentral.com/articles/10.1186/s13059-014-0550-8
# rlog is just used for visualization
# but DE uses counts
# Show normalised data using boxplots
# but suppose we look at non-normalised
# Make mva.pairs-this is slow “mva.pairs.png” is provided 
#png(filename="mva.pairs.png",width=2000, height=2000)
#mva.pairs(counts_un_rlog)
#dev.off()
# Make a PCA plot
# or a quick plot in 2d
# Output a distance matrix
# Generate heatmap of distance matrix
# Alternative PCA plot
	#----------------DEG using DESeq2
# Stats similar to Limma but for count data
# Two-factor analysis (Sex, Line)
# Specify contrasts
# Plot the DEG, plotMA()
# Make heatmaps from each output table
# Make a heatmap for the top 50
# Repeat for all genes
# Repeat for the cell lines
# Heatmap for top 50 by cell lines
# Repeat for all by cell lines
	#---------------GENE ANNOTATION
# Download Ensembl annotation using BiomaRt and rename the samples
# UK ensembl is being updated so we use a USA mirror, "useast.ensembl.org"
# resultAnnot <- biomaRt::getBM(
# 	values=rownames(dds_rnaseq),
# 	attributes = c("ensembl_gene_id","external_gene_name",
# 		"chromosome_name","start_position","end_position",
# 		"description","strand"),
# 	filters="ensembl_gene_id",
# 	mart=mart)
# Merge annotation with input data
# Make sure annotation is in same order
# make the nice names
# check names
# Make heatmap with candidate genes
# But what about the marker profiles from known markers?
# Load some developmental markers to assess the expression profile
#%in% This makes sure the marker gene names are rownames in the object
# Finally add column annotation
